generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum MessageRole {
  user
  assistant
}

model User {
  id String @id @default(uuid())
  email String?
  name String?
  provider String?
  providerId String? @unique
  projects Project[]
  chats Chat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([providerId])
  @@index([email])
}

model Project {
  id String @id @default(uuid())
  name String
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  chats Chat[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Chat {
  id        String    @id @default(uuid())
  title     String?
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId String?
  project   Project?  @relation(fields: [projectId], references: [id], onDelete: SetNull)
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
}

model Message {
  id        String      @id @default(uuid())
  content   String
  role      MessageRole
  chatId    String
  chat      Chat        @relation(fields: [chatId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([chatId])
}